@using Entities.DTOModels
@model WebApp.Models.SpecialityViewModel

@{
    ViewData["Title"] = "Create";
    var departments = new List<SelectListItem>();

    foreach (DepartmentDTO p in ViewBag.Departments)
    {
        departments.Add(new SelectListItem { Text = p.NameOfDepartment, Value = p.NameOfDepartment });
    }
}

<h1>Create</h1>

<h4>Speciality</h4>

<div class="modal-content">
    <div class="modal-body">
        <div class="row">
            <div class="col-md-4">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="NameOfSpeciality" class="control-label"></label>
                        <input asp-for="NameOfSpeciality" class="form-control" />
                        <span asp-validation-for="NameOfSpeciality" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Department" class="control-label"></label>
                        <select asp-for="Department" class="form-control" 
                                asp-items="@(new SelectList(departments, "Value", "Text"))">
                        </select>
                        <span asp-validation-for="Department" class="text-danger"></span>
                    </div>
            
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
         <a asp-action="Index">Back to List</a>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
